plugins {
 id 'org.jetbrains.intellij' version '0.4.8'
 id 'org.jetbrains.kotlin.jvm' version '1.3.0'
 id 'de.undercouch.download' version '3.4.3'
// id 'gradle-download-task'
}

repositories {
 mavenCentral()
}

sourceSets {
 main {
  kotlin.srcDirs = ['src/jda/']
 }
}

group 'org.mcdh'
version '0.0.1'

dependencies {
 compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
 compile 'org.jetbrains.kotlin:kotlin-reflect'
// compile 'com.jetbrains:ideaIC:2018.3'
 compile fileTree(dir: 'libs/', includes: ['*.jar'])
}

intellij {
 version 'IC-2018.3'
// plugins 'coverage'
// pluginName 'dummy'
}

compileKotlin {
 kotlinOptions.jvmTarget = '1.8'
}

jar {
 from sourceSets.main.output
// manifest.attributes(
//  'Main-Class' : 'org.mcdh.jda.MainKt'
// )
}

String intellijLocation = 'https://download.jetbrains.com/idea/ideaIU-2018.3.6.tar.gz'
String downloadLocation = "${project.buildDir.getAbsolutePath()}/intellij.tar.gz"
String extractedLocation = "${buildDir.getAbsolutePath()}/libs/idea_extracted/"

//task getJetbrainsDecompiler(type: Download) {
task getJetbrainsDecompiler() {
 doFirst {
  final File libs = project.file("libs/")
  if (!libs.exists()) {
   libs.mkdirs()
  }
 }
 onlyIf {
  !project.file(downloadLocation).exists() && !project.file('libs/java-decompiler.jar').exists()
 }
 doLast {
  download {
   src intellijLocation
   dest downloadLocation
   overwrite false
  }
  copy {
   from tarTree(downloadLocation)
   into extractedLocation
  }
 }
}

task copyJetbrainsDecompiler(type: Copy, dependsOn: getJetbrainsDecompiler) {
 onlyIf {
  !project.file('libs/java-decompiler.jar').exists()
 }
 copy {
  //TODO automatically deduce 'idea-IU-183.6156.11' so versions can be changed without causing path misalignment
  from file("${extractedLocation}/idea-IU-183.6156.11/plugins/java-decompiler/lib/java-decompiler.jar")
  into file("libs/")
 }
}

compileKotlin.dependsOn(copyJetbrainsDecompiler)